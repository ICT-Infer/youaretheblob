<!doctype html>
<meta charset="utf-8" />
<title>blob</title>
<style>
svg
{
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
</style>
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
<path id=blob fill="#000" stroke="none"/>
</svg>
<script>
// Copyright (c) 2017, Erik Nordstr√∏m <erik@nordstroem.no>

let r1 = 200;
let r2 =  20;

// m    0      $r
const d = "\
M 256  256 \
m $r1    0 \
q $cxa $cya, -$r1 -$r1 \
q $cxb $cyb, -$r1  $r1 \
q $cxc $cyc,  $r1  $r1 \
q $cxd $cyd,  $r1 -$r1 \
";

const blob = document.getElementById('blob');

updateblob = () =>
{
	let cx1a =   0; let cy1a = -r1;
	let cx1b = -r1; let cy1b =   0;
	let cx1c =   0; let cy1c =  r1;
	let cx1d =  r1; let cy1d =   0;

	let t2 = Date.now() / 133;

	let cxa = cx1a + r2 * Math.cos(t2);
	let cya = cy1a + r2 * Math.sin(t2);
	let cxb = cx1b + r2 * Math.cos(t2 + .5 * Math.PI);
	let cyb = cy1b + r2 * Math.sin(t2 + .5 * Math.PI);
	let cxc = cx1c + r2 * Math.cos(t2 + Math.PI);
	let cyc = cy1c + r2 * Math.sin(t2 + Math.PI);
	let cxd = cx1d + r2 * Math.cos(t2 + .75 * Math.PI);
	let cyd = cy1d + r2 * Math.sin(t2 + .75 * Math.PI);

	let dcurr = d.replace(/\$r1/g, r1)
	             .replace(/\$cxa/g, cxa).replace(/\$cya/g, cya)
	             .replace(/\$cxb/g, cxb).replace(/\$cyb/g, cyb)
	             .replace(/\$cxc/g, cxc).replace(/\$cyc/g, cyc)
	             .replace(/\$cxd/g, cxd).replace(/\$cyd/g, cyd);

	blob.setAttribute("d", dcurr);

	window.requestAnimationFrame(updateblob);
}

updateblob();
</script>
